// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`deleteById is not available if foreign table has @omit delete 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Child",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildChildPkeyConnect": "ChildChildPkeyConnect",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildNodeIdConnect": "ChildNodeIdConnect",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate": "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildPatch": "ChildPatch",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyNodeIdUpdate": "ParentOnChildForChildParentFkeyNodeIdUpdate",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateChildByIdInput": "UpdateChildByIdInput",
    "UpdateChildInput": "UpdateChildInput",
    "UpdateChildPayload": "UpdateChildPayload",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateChildOnChildForChildParentFkeyPatch": "updateChildOnChildForChildParentFkeyPatch",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`deleteById removes records 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Child",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildChildPkeyConnect": "ChildChildPkeyConnect",
    "ChildChildPkeyDelete": "ChildChildPkeyDelete",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildNodeIdConnect": "ChildNodeIdConnect",
    "ChildNodeIdDelete": "ChildNodeIdDelete",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate": "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildPatch": "ChildPatch",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteChildByIdInput": "DeleteChildByIdInput",
    "DeleteChildInput": "DeleteChildInput",
    "DeleteChildPayload": "DeleteChildPayload",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyNodeIdUpdate": "ParentOnChildForChildParentFkeyNodeIdUpdate",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateChildByIdInput": "UpdateChildByIdInput",
    "UpdateChildInput": "UpdateChildInput",
    "UpdateChildPayload": "UpdateChildPayload",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateChildOnChildForChildParentFkeyPatch": "updateChildOnChildForChildParentFkeyPatch",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`deleteByNodeId is not available if foreign table has @omit delete 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": Array [],
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Child",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildChildPkeyConnect": "ChildChildPkeyConnect",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildNodeIdConnect": "ChildNodeIdConnect",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate": "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildPatch": "ChildPatch",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyNodeIdUpdate": "ParentOnChildForChildParentFkeyNodeIdUpdate",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateChildByIdInput": "UpdateChildByIdInput",
    "UpdateChildInput": "UpdateChildInput",
    "UpdateChildPayload": "UpdateChildPayload",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateChildOnChildForChildParentFkeyPatch": "updateChildOnChildForChildParentFkeyPatch",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`deleteByNodeId removes records 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": Array [],
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Child",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildChildPkeyConnect": "ChildChildPkeyConnect",
    "ChildChildPkeyDelete": "ChildChildPkeyDelete",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildNodeIdConnect": "ChildNodeIdConnect",
    "ChildNodeIdDelete": "ChildNodeIdDelete",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate": "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildPatch": "ChildPatch",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteChildByIdInput": "DeleteChildByIdInput",
    "DeleteChildInput": "DeleteChildInput",
    "DeleteChildPayload": "DeleteChildPayload",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyNodeIdUpdate": "ParentOnChildForChildParentFkeyNodeIdUpdate",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateChildByIdInput": "UpdateChildByIdInput",
    "UpdateChildInput": "UpdateChildInput",
    "UpdateChildPayload": "UpdateChildPayload",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateChildOnChildForChildParentFkeyPatch": "updateChildOnChildForChildParentFkeyPatch",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`deleteOthers is not available if foreign table has @omit delete 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Child",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildChildPkeyConnect": "ChildChildPkeyConnect",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildNodeIdConnect": "ChildNodeIdConnect",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate": "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildPatch": "ChildPatch",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyNodeIdUpdate": "ParentOnChildForChildParentFkeyNodeIdUpdate",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateChildByIdInput": "UpdateChildByIdInput",
    "UpdateChildInput": "UpdateChildInput",
    "UpdateChildPayload": "UpdateChildPayload",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateChildOnChildForChildParentFkeyPatch": "updateChildOnChildForChildParentFkeyPatch",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`deleteOthers is not available when no primary key on the foreign relation 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`deleteOthers removes all records if none are modified 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Child",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildChildPkeyConnect": "ChildChildPkeyConnect",
    "ChildChildPkeyDelete": "ChildChildPkeyDelete",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildNodeIdConnect": "ChildNodeIdConnect",
    "ChildNodeIdDelete": "ChildNodeIdDelete",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate": "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildPatch": "ChildPatch",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteChildByIdInput": "DeleteChildByIdInput",
    "DeleteChildInput": "DeleteChildInput",
    "DeleteChildPayload": "DeleteChildPayload",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyNodeIdUpdate": "ParentOnChildForChildParentFkeyNodeIdUpdate",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateChildByIdInput": "UpdateChildByIdInput",
    "UpdateChildInput": "UpdateChildInput",
    "UpdateChildPayload": "UpdateChildPayload",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateChildOnChildForChildParentFkeyPatch": "updateChildOnChildForChildParentFkeyPatch",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`deleteOthers removes other records 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Child",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildChildPkeyConnect": "ChildChildPkeyConnect",
    "ChildChildPkeyDelete": "ChildChildPkeyDelete",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildNodeIdConnect": "ChildNodeIdConnect",
    "ChildNodeIdDelete": "ChildNodeIdDelete",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate": "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildPatch": "ChildPatch",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteChildByIdInput": "DeleteChildByIdInput",
    "DeleteChildInput": "DeleteChildInput",
    "DeleteChildPayload": "DeleteChildPayload",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyNodeIdUpdate": "ParentOnChildForChildParentFkeyNodeIdUpdate",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateChildByIdInput": "UpdateChildByIdInput",
    "UpdateChildInput": "UpdateChildInput",
    "UpdateChildPayload": "UpdateChildPayload",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateChildOnChildForChildParentFkeyPatch": "updateChildOnChildForChildParentFkeyPatch",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`forward nested mutation during update 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Child",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildChildPkeyConnect": "ChildChildPkeyConnect",
    "ChildChildPkeyDelete": "ChildChildPkeyDelete",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildNodeIdConnect": "ChildNodeIdConnect",
    "ChildNodeIdDelete": "ChildNodeIdDelete",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate": "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildPatch": "ChildPatch",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteChildByIdInput": "DeleteChildByIdInput",
    "DeleteChildInput": "DeleteChildInput",
    "DeleteChildPayload": "DeleteChildPayload",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyNodeIdUpdate": "ParentOnChildForChildParentFkeyNodeIdUpdate",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateChildByIdInput": "UpdateChildByIdInput",
    "UpdateChildInput": "UpdateChildInput",
    "UpdateChildPayload": "UpdateChildPayload",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateChildOnChildForChildParentFkeyPatch": "updateChildOnChildForChildParentFkeyPatch",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`forward nested mutation with nested update 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Child",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildChildPkeyConnect": "ChildChildPkeyConnect",
    "ChildChildPkeyDelete": "ChildChildPkeyDelete",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildNodeIdConnect": "ChildNodeIdConnect",
    "ChildNodeIdDelete": "ChildNodeIdDelete",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate": "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildPatch": "ChildPatch",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteChildByIdInput": "DeleteChildByIdInput",
    "DeleteChildInput": "DeleteChildInput",
    "DeleteChildPayload": "DeleteChildPayload",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyNodeIdUpdate": "ParentOnChildForChildParentFkeyNodeIdUpdate",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateChildByIdInput": "UpdateChildByIdInput",
    "UpdateChildInput": "UpdateChildInput",
    "UpdateChildPayload": "UpdateChildPayload",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateChildOnChildForChildParentFkeyPatch": "updateChildOnChildForChildParentFkeyPatch",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`forward nested mutation with nested update does not accept updates to constraint keys 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Child",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildChildPkeyConnect": "ChildChildPkeyConnect",
    "ChildChildPkeyDelete": "ChildChildPkeyDelete",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildNodeIdConnect": "ChildNodeIdConnect",
    "ChildNodeIdDelete": "ChildNodeIdDelete",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate": "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildPatch": "ChildPatch",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteChildByIdInput": "DeleteChildByIdInput",
    "DeleteChildInput": "DeleteChildInput",
    "DeleteChildPayload": "DeleteChildPayload",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyNodeIdUpdate": "ParentOnChildForChildParentFkeyNodeIdUpdate",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateChildByIdInput": "UpdateChildByIdInput",
    "UpdateChildInput": "UpdateChildInput",
    "UpdateChildPayload": "UpdateChildPayload",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateChildOnChildForChildParentFkeyPatch": "updateChildOnChildForChildParentFkeyPatch",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`forward nested mutation with nested updateByNodeId 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": Array [],
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Child",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildChildPkeyConnect": "ChildChildPkeyConnect",
    "ChildChildPkeyDelete": "ChildChildPkeyDelete",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildNodeIdConnect": "ChildNodeIdConnect",
    "ChildNodeIdDelete": "ChildNodeIdDelete",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate": "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildPatch": "ChildPatch",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteChildByIdInput": "DeleteChildByIdInput",
    "DeleteChildInput": "DeleteChildInput",
    "DeleteChildPayload": "DeleteChildPayload",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyNodeIdUpdate": "ParentOnChildForChildParentFkeyNodeIdUpdate",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateChildByIdInput": "UpdateChildByIdInput",
    "UpdateChildInput": "UpdateChildInput",
    "UpdateChildPayload": "UpdateChildPayload",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateChildOnChildForChildParentFkeyPatch": "updateChildOnChildForChildParentFkeyPatch",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`reverse nested mutation with nested update 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Child",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildChildPkeyConnect": "ChildChildPkeyConnect",
    "ChildChildPkeyDelete": "ChildChildPkeyDelete",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildNodeIdConnect": "ChildNodeIdConnect",
    "ChildNodeIdDelete": "ChildNodeIdDelete",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate": "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildPatch": "ChildPatch",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteChildByIdInput": "DeleteChildByIdInput",
    "DeleteChildInput": "DeleteChildInput",
    "DeleteChildPayload": "DeleteChildPayload",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyNodeIdUpdate": "ParentOnChildForChildParentFkeyNodeIdUpdate",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateChildByIdInput": "UpdateChildByIdInput",
    "UpdateChildInput": "UpdateChildInput",
    "UpdateChildPayload": "UpdateChildPayload",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateChildOnChildForChildParentFkeyPatch": "updateChildOnChildForChildParentFkeyPatch",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`update with no row matched works 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Child",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildChildPkeyConnect": "ChildChildPkeyConnect",
    "ChildChildPkeyDelete": "ChildChildPkeyDelete",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildNodeIdConnect": "ChildNodeIdConnect",
    "ChildNodeIdDelete": "ChildNodeIdDelete",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate": "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildPatch": "ChildPatch",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteChildByIdInput": "DeleteChildByIdInput",
    "DeleteChildInput": "DeleteChildInput",
    "DeleteChildPayload": "DeleteChildPayload",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyNodeIdUpdate": "ParentOnChildForChildParentFkeyNodeIdUpdate",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateChildByIdInput": "UpdateChildByIdInput",
    "UpdateChildInput": "UpdateChildInput",
    "UpdateChildPayload": "UpdateChildPayload",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateChildOnChildForChildParentFkeyPatch": "updateChildOnChildForChildParentFkeyPatch",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`updateByNodeId does not error 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": undefined,
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "User",
      "UserPrivate",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "BigInt": "BigInt",
    "Boolean": "Boolean",
    "CreateUserInput": "CreateUserInput",
    "CreateUserPayload": "CreateUserPayload",
    "CreateUserPrivateInput": "CreateUserPrivateInput",
    "CreateUserPrivatePayload": "CreateUserPrivatePayload",
    "Cursor": "Cursor",
    "DeleteUserByIdInput": "DeleteUserByIdInput",
    "DeleteUserByUsernameInput": "DeleteUserByUsernameInput",
    "DeleteUserInput": "DeleteUserInput",
    "DeleteUserPayload": "DeleteUserPayload",
    "DeleteUserPrivateByIdInput": "DeleteUserPrivateByIdInput",
    "DeleteUserPrivateInput": "DeleteUserPrivateInput",
    "DeleteUserPrivatePayload": "DeleteUserPrivatePayload",
    "ID": "ID",
    "Int": "Int",
    "JSON": "JSON",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Query": "Query",
    "String": "String",
    "UpdateUserByIdInput": "UpdateUserByIdInput",
    "UpdateUserByUsernameInput": "UpdateUserByUsernameInput",
    "UpdateUserInput": "UpdateUserInput",
    "UpdateUserPayload": "UpdateUserPayload",
    "UpdateUserPrivateByIdInput": "UpdateUserPrivateByIdInput",
    "UpdateUserPrivateInput": "UpdateUserPrivateInput",
    "UpdateUserPrivatePayload": "UpdateUserPrivatePayload",
    "User": "User",
    "UserCondition": "UserCondition",
    "UserInput": "UserInput",
    "UserNodeIdConnect": "UserNodeIdConnect",
    "UserOnUserPrivateForUserPrivateIdFkeyNodeIdUpdate": "UserOnUserPrivateForUserPrivateIdFkeyNodeIdUpdate",
    "UserOnUserPrivateForUserPrivateIdFkeyUsingUserPkeyUpdate": "UserOnUserPrivateForUserPrivateIdFkeyUsingUserPkeyUpdate",
    "UserOnUserPrivateForUserPrivateIdFkeyUsingUserUsernameKeyUpdate": "UserOnUserPrivateForUserPrivateIdFkeyUsingUserUsernameKeyUpdate",
    "UserPatch": "UserPatch",
    "UserPrivate": "UserPrivate",
    "UserPrivateCondition": "UserPrivateCondition",
    "UserPrivateIdFkeyInput": "UserPrivateIdFkeyInput",
    "UserPrivateIdFkeyInverseInput": "UserPrivateIdFkeyInverseInput",
    "UserPrivateIdFkeyUserCreateInput": "UserPrivateIdFkeyUserCreateInput",
    "UserPrivateIdFkeyUserPrivateCreateInput": "UserPrivateIdFkeyUserPrivateCreateInput",
    "UserPrivateInput": "UserPrivateInput",
    "UserPrivateNodeIdConnect": "UserPrivateNodeIdConnect",
    "UserPrivateOnUserPrivateForUserPrivateIdFkeyNodeIdUpdate": "UserPrivateOnUserPrivateForUserPrivateIdFkeyNodeIdUpdate",
    "UserPrivateOnUserPrivateForUserPrivateIdFkeyUsingUserPrivatePkeyUpdate": "UserPrivateOnUserPrivateForUserPrivateIdFkeyUsingUserPrivatePkeyUpdate",
    "UserPrivatePatch": "UserPrivatePatch",
    "UserPrivateUserPrivatePkeyConnect": "UserPrivateUserPrivatePkeyConnect",
    "UserPrivatesConnection": "UserPrivatesConnection",
    "UserPrivatesEdge": "UserPrivatesEdge",
    "UserPrivatesOrderBy": "UserPrivatesOrderBy",
    "UserUserPkeyConnect": "UserUserPkeyConnect",
    "UserUserUsernameKeyConnect": "UserUserUsernameKeyConnect",
    "UsersConnection": "UsersConnection",
    "UsersEdge": "UsersEdge",
    "UsersOrderBy": "UsersOrderBy",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateUserOnUserPrivateForUserPrivateIdFkeyPatch": "updateUserOnUserPrivateForUserPrivateIdFkeyPatch",
    "updateUserPrivateOnUserPrivateForUserPrivateIdFkeyPatch": "updateUserPrivateOnUserPrivateForUserPrivateIdFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;

exports[`updateByNodeId with composite primary key works 1`] = `
GraphQLSchema {
  "__allowedLegacyNames": Array [],
  "__validationErrors": Array [],
  "_directives": Array [
    "@include",
    "@skip",
    "@deprecated",
  ],
  "_implementations": Object {
    "Node": Array [
      "Query",
      "Child",
      "Parent",
    ],
  },
  "_mutationType": "Mutation",
  "_possibleTypeMap": undefined,
  "_queryType": "Query",
  "_subscriptionType": undefined,
  "_typeMap": Object {
    "Boolean": "Boolean",
    "Child": "Child",
    "ChildChildPkeyConnect": "ChildChildPkeyConnect",
    "ChildChildPkeyDelete": "ChildChildPkeyDelete",
    "ChildCondition": "ChildCondition",
    "ChildInput": "ChildInput",
    "ChildNodeIdConnect": "ChildNodeIdConnect",
    "ChildNodeIdDelete": "ChildNodeIdDelete",
    "ChildOnChildForChildParentFkeyNodeIdUpdate": "ChildOnChildForChildParentFkeyNodeIdUpdate",
    "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate": "ChildOnChildForChildParentFkeyUsingChildPkeyUpdate",
    "ChildParentFkeyChildCreateInput": "ChildParentFkeyChildCreateInput",
    "ChildParentFkeyInput": "ChildParentFkeyInput",
    "ChildParentFkeyInverseInput": "ChildParentFkeyInverseInput",
    "ChildParentFkeyParentCreateInput": "ChildParentFkeyParentCreateInput",
    "ChildPatch": "ChildPatch",
    "ChildrenConnection": "ChildrenConnection",
    "ChildrenEdge": "ChildrenEdge",
    "ChildrenOrderBy": "ChildrenOrderBy",
    "CreateChildInput": "CreateChildInput",
    "CreateChildPayload": "CreateChildPayload",
    "CreateParentInput": "CreateParentInput",
    "CreateParentPayload": "CreateParentPayload",
    "Cursor": "Cursor",
    "DeleteChildByIdAndParentIdAndNameInput": "DeleteChildByIdAndParentIdAndNameInput",
    "DeleteChildInput": "DeleteChildInput",
    "DeleteChildPayload": "DeleteChildPayload",
    "DeleteParentByIdInput": "DeleteParentByIdInput",
    "DeleteParentInput": "DeleteParentInput",
    "DeleteParentPayload": "DeleteParentPayload",
    "ID": "ID",
    "Int": "Int",
    "Mutation": "Mutation",
    "Node": "Node",
    "PageInfo": "PageInfo",
    "Parent": "Parent",
    "ParentCondition": "ParentCondition",
    "ParentInput": "ParentInput",
    "ParentNodeIdConnect": "ParentNodeIdConnect",
    "ParentNodeIdDelete": "ParentNodeIdDelete",
    "ParentOnChildForChildParentFkeyNodeIdUpdate": "ParentOnChildForChildParentFkeyNodeIdUpdate",
    "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate": "ParentOnChildForChildParentFkeyUsingParentPkeyUpdate",
    "ParentParentPkeyConnect": "ParentParentPkeyConnect",
    "ParentParentPkeyDelete": "ParentParentPkeyDelete",
    "ParentPatch": "ParentPatch",
    "ParentsConnection": "ParentsConnection",
    "ParentsEdge": "ParentsEdge",
    "ParentsOrderBy": "ParentsOrderBy",
    "Query": "Query",
    "String": "String",
    "UpdateChildByIdAndParentIdAndNameInput": "UpdateChildByIdAndParentIdAndNameInput",
    "UpdateChildInput": "UpdateChildInput",
    "UpdateChildPayload": "UpdateChildPayload",
    "UpdateParentByIdInput": "UpdateParentByIdInput",
    "UpdateParentInput": "UpdateParentInput",
    "UpdateParentPayload": "UpdateParentPayload",
    "__Directive": "__Directive",
    "__DirectiveLocation": "__DirectiveLocation",
    "__EnumValue": "__EnumValue",
    "__Field": "__Field",
    "__InputValue": "__InputValue",
    "__Schema": "__Schema",
    "__Type": "__Type",
    "__TypeKind": "__TypeKind",
    "updateChildOnChildForChildParentFkeyPatch": "updateChildOnChildForChildParentFkeyPatch",
    "updateParentOnChildForChildParentFkeyPatch": "updateParentOnChildForChildParentFkeyPatch",
  },
  "astNode": undefined,
  "extensionASTNodes": undefined,
}
`;
